// <auto-generated />
using System;
using DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiCV.Migrations
{
    [DbContext(typeof(CVDbContext))]
    partial class CVDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CV.Entities.CompetenceEntity", b =>
                {
                    b.Property<int>("Id_Competences")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Competences"));

                    b.Property<int>("Id_Profil")
                        .HasColumnType("integer");

                    b.Property<int>("Id_TypeCompetences")
                        .HasColumnType("integer");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Competences");

                    b.HasIndex("Id_Profil");

                    b.HasIndex("Id_TypeCompetences");

                    b.ToTable("CompetenceEntities");
                });

            modelBuilder.Entity("CV.Entities.EducationEntity", b =>
                {
                    b.Property<int>("Id_Education")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Education"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Diplome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Id_Profil")
                        .HasColumnType("integer");

                    b.Property<string>("NomEcole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Education");

                    b.HasIndex("Id_Profil");

                    b.ToTable("EducationEntities");
                });

            modelBuilder.Entity("CV.Entities.ExperienceEntity", b =>
                {
                    b.Property<int>("Id_Experience")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Experience"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Id_Profil")
                        .HasColumnType("integer");

                    b.Property<string>("Nom_Entreprise")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Experience");

                    b.HasIndex("Id_Profil");

                    b.ToTable("ExperienceEntities");
                });

            modelBuilder.Entity("CV.Entities.ProfilEntity", b =>
                {
                    b.Property<int>("Id_Profil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Profil"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Photo")
                        .HasColumnType("text");

                    b.Property<string>("Profil")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Profil");

                    b.ToTable("ProfilEntities");
                });

            modelBuilder.Entity("CV.Entities.TypeCompetenceEntity", b =>
                {
                    b.Property<int>("Id_TypeCompetences")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_TypeCompetences"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_TypeCompetences");

                    b.ToTable("TypeCompetenceEntities");
                });

            modelBuilder.Entity("CV.Entities.CompetenceEntity", b =>
                {
                    b.HasOne("CV.Entities.ProfilEntity", "Profil")
                        .WithMany("Competence")
                        .HasForeignKey("Id_Profil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CV.Entities.TypeCompetenceEntity", "TypeCompetences")
                        .WithMany("Competence")
                        .HasForeignKey("Id_TypeCompetences")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profil");

                    b.Navigation("TypeCompetences");
                });

            modelBuilder.Entity("CV.Entities.EducationEntity", b =>
                {
                    b.HasOne("CV.Entities.ProfilEntity", "Profil")
                        .WithMany("Education")
                        .HasForeignKey("Id_Profil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profil");
                });

            modelBuilder.Entity("CV.Entities.ExperienceEntity", b =>
                {
                    b.HasOne("CV.Entities.ProfilEntity", "Profil")
                        .WithMany("Experience")
                        .HasForeignKey("Id_Profil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profil");
                });

            modelBuilder.Entity("CV.Entities.ProfilEntity", b =>
                {
                    b.Navigation("Competence");

                    b.Navigation("Education");

                    b.Navigation("Experience");
                });

            modelBuilder.Entity("CV.Entities.TypeCompetenceEntity", b =>
                {
                    b.Navigation("Competence");
                });
#pragma warning restore 612, 618
        }
    }
}
